# This section defines input plugins that specify how Logstash should receive data from external
# sources.
input {
    tcp {
        #In this example, the input is a TCP socket on port 5000. That is, logstash listens on
        # port 5000 for incoming logs.
        port => 5000
        # The codec specifies that the incoming messages will be in json format. The 'json' 
        # codec option decodes the incoming JSON messages so that they can be processed. 
        # They decode by looking for a JSON object in the message field.
        codec => json
    }
}

# This section defines the filter plugins, which specify how Logstash should process and 
# transform the data. 
filter {
    # The json plugin parses JSON-encoded strings and turns them into structured data.
    json {
        # This specifies the field that contains the JSON string to be parsed. In this case,
        # it's assumed that the jSON string is in the 'message' field of the incoming logs.
        source => "message"
    }
}

# This section defines the output plugins, which specify where Logstash should send the 
# processed data.
output {
    # This plugin sends the logs to an Elasticsearch cluster.
    es01 {
        # Specifies the Elasticsearch host. The logs will be sent to http://elasticsearch:9200,
        # which is the default port for Elasticsearch.
        hosts => ["es01:9200"]
        # Specifies the name of the index in Elasticsearch where the logs will be stored. 
        # The %{+YYYY.MM.dd} part creates a new index for each day based on the log's timestamp, 
        # making it easier to manage and query logs by date.
        index => "fastapi-logs-%{+YYYY.MM.dd}"
    }
    # This plugin prints the logs to the standard output (console)
    stdout {
        # Specifies the format in which the logs will be printed to the console. The rubydebug codec 
        # formats the logs in a human-readable way, which is useful for debugging.
        codec => rubydebug
    }
}
